{"version":3,"sources":["Logo.js","Navigation.js","Header.js","SelectBtn.js","Button.js","ShowsContext.js","ShowDescription.js","ShowMainDescription.js","Loader.js","ShowCast.js","Actor.js","Movies.js","Footer.js","ScrollToTop.js","App.js","ScrollToView.js","index.js"],"names":["StyledLogo","styled","div","Logo","handleReset","onClick","className","to","Navbar","nav","Navigation","dates","filterDate","filterDateHandler","today","Hero","header","Header","StyledSelect","select","SelectBtn","props","onChange","name","value","hidden","placeholder","children","StyledButton","button","Button","ShowsContext","createContext","clickedShow","ShowsContextProvider","useState","JSON","parse","window","localStorage","getItem","showSave","setShowSave","actorId","setActorId","context","clickedActor","handleShowSave","item","setItem","stringify","handleActor","id","Provider","StyledDescription","ShowDescription","show","useContext","ratingColor","rating","average","src","image","original","alt","officialSite","href","style","color","season","number","summary","dangerouslySetInnerHTML","__html","schedule","time","network","ShowMainDescription","type","premiered","days","join","Spinner","Loader","StyledCast","CastGrid","ShowCast","cast","setCast","isLoading","setIsLoading","history","useHistory","showName","showId","useEffect","a","fetch","response","json","data","console","log","castDataFetcher","goBack","length","map","index","person","medium","character","StyedActor","Actor","actor","setActor","actorDataFetcher","country","gender","birthday","StyledForm","form","StyledMain","main","MoviesNav","MoviesGrid","Movies","genre","search","handleSearch","handleSubmit","showMovies","handleFilter","handleCountry","path","exact","onSubmit","airdate","airtime","StyledFooter","footer","Footer","Date","getFullYear","StyledScrollTop","ScrollTop","ScrollToTop","text","distance","breakpoint","speed","target","icon","App","movies","setMovies","setShowMovies","setSearch","query","setQuery","setCountry","filterType","setFilterType","filterGenre","setFilterGenre","addDays","result","setDate","getDate","toISOString","slice","tomorrow","setFilterDate","setTimeout","initialDataFetcher","filter","includes","genres","toLowerCase","e","preventDefault","ScrollToView","pathname","useLocation","scrollTo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d0c83e6.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledLogo = styled.div`\n  font-size: 1.4rem;\n  cursor: pointer;\n\n  .link {\n    text-decoration: none;\n  }\n\n  h1 {\n    color: #667eea;\n  }\n\n  @media screen and (min-width: 900px) {\n    position: absolute;\n    left: 4rem;\n    font-size: 2rem;\n  }\n`;\n\nconst Logo = ({ handleReset }) => {\n  return (\n    <StyledLogo onClick={handleReset}>\n      <Link className=\"link\" to=\"/\">\n        <h1>TVShow Guide</h1>\n      </Link>\n    </StyledLogo>\n  );\n};\n\nexport default Logo;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Logo from \"./Logo\";\n\nconst Navbar = styled.nav`\n  position: fixed;\n  top: 0;\n  height: 7rem;\n  width: inherit;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n  padding: 0 2rem;\n  background: rgba(0, 0, 0, 0.2);\n  z-index: 3;\n\n  button {\n    background-color: transparent;\n    color: rgba(255, 255, 255, 0.3);\n    font-size: 1.6rem;\n    margin: 0 2rem;\n    cursor: pointer;\n    transition: all 0.2s ease-in-out;\n    border: 1px solid rgba(255, 255, 255, 0.3);\n    border-radius: 10px;\n    padding: 0 1rem;\n    user-select: none;\n\n    &:hover {\n      color: #667eea;\n      border-color: #667eea;\n    }\n  }\n\n  @media screen and (min-width: 900px) {\n    height: 5rem;\n    flex-direction: row;\n    justify-content: flex-end;\n  }\n`;\n\nconst Navigation = ({ handleReset, dates, filterDate, filterDateHandler }) => {\n  return (\n    <Navbar>\n      <Logo handleReset={handleReset} />\n      <button onClick={filterDateHandler}>{`On Air \n      ${filterDate === dates.today ? \"Today\" : \"Tomorrow\"}`}</button>\n    </Navbar>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Hero = styled.header`\n  width: 100%;\n  height: 7rem;\n  padding-top: 5rem;\n  color: #fff;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-image: linear-gradient(to right bottom, #434343 0%, black 100%);\n\n  @media screen and (min-width: 900px) {\n    height: 5rem;\n  }\n`;\n\nconst Header = () => {\n  return <Hero></Hero>;\n};\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledSelect = styled.select`\n  width: 13rem;\n  margin: 0.8rem;\n  height: 1.8rem;\n  border-radius: 10px;\n  /* text-align: center; */\n  border: 1px solid rgba(255, 255, 255, 0.3);\n  background-color: transparent;\n  background-image: linear-gradient(135deg, #667eea90 0%, #764ba290 100%);\n  color: #fff;\n  font-size: 1.1rem;\n  cursor: pointer;\n  /* outline: none; */\n  transition: all 0.2s ease-in-out;\n\n  &:hover {\n    background-color: rgba(255, 255, 255, 0.5);\n  }\n\n  @media screen and (min-width: 900px) {\n    width: 9rem;\n    margin: 1.5rem;\n  }\n`;\n\nconst SelectBtn = (props) => {\n  return (\n    <StyledSelect\n      // defaultValue=\"default\"\n      onChange={props.onChange}\n      name={props.name}\n      value={props.value}\n    >\n      <option hidden>{props.placeholder}</option>\n\n      {props.children}\n    </StyledSelect>\n  );\n};\n\nexport default SelectBtn;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button`\n  width: 9rem;\n  margin: 1.5rem;\n  height: 1.8rem;\n  border-radius: 10px;\n  border: 1px solid rgba(255, 255, 255, 0.3);\n  background-color: transparent;\n  background-image: linear-gradient(135deg, #667eea90 0%, #764ba290 100%);\n  color: #fff;\n  font-size: 1.1rem;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n\n  &:hover {\n    background-color: rgba(255, 255, 255, 0.5);\n  }\n`;\n\nconst Button = (props) => {\n  return <StyledButton onClick={props.onClick}>{props.children}</StyledButton>;\n};\n\nexport default Button;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { createContext } from \"react\";\n\nconst ShowsContext = createContext({\n  clickedShow: null,\n});\n\nexport const ShowsContextProvider = (props) => {\n  const [showSave, setShowSave] = useState(\n    JSON.parse(window.localStorage.getItem(\"savedShow\"))\n  );\n\n  const [actorId, setActorId] = useState(\n    JSON.parse(window.localStorage.getItem(\"savedActor\"))\n  );\n\n  const showSaveHander = (item) => {\n    setShowSave(item);\n    window.localStorage.setItem(\"savedShow\", JSON.stringify(item));\n  };\n\n  const actorHandler = (id) => {\n    setActorId(id);\n  };\n\n  // const resetHandler = () => {\n  //   console.log(\"reset\");\n  //   if (location.pathname === \"/\") {\n  //     history.goBack();\n  //   } else {\n  //     history.push(\"/\");\n  //   }\n  // };\n\n  // const [selectedOption, setSelectedOption] = useState(null);\n\n  // const selectHandler = (item) => {\n  //   setSelectedOption(item);\n  // };\n  // console.log(selectedOption);\n\n  const context = {\n    clickedShow: showSave,\n    clickedActor: actorId,\n    handleShowSave: showSaveHander,\n    handleActor: actorHandler,\n    // option: selectedOption,\n    // setOption: selectHandler,\n  };\n\n  return (\n    <ShowsContext.Provider value={context}>\n      {props.children}\n    </ShowsContext.Provider>\n  );\n};\n\nexport default ShowsContext;\n","import React from \"react\";\n// import { useContext } from \"react\";\n// import ShowsContext from \"./ShowsContext\";\n// import { Route, Switch } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"./Button\";\nimport styled from \"styled-components\";\nimport { useContext } from \"react\";\nimport ShowsContext from \"./ShowsContext\";\n\n// import ShowMainDescription from \"./ShowMainDescription\";\n\nconst StyledDescription = styled.div`\n  padding: 5rem 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: space-between;\n  overflow: hidden;\n\n  .img-desc {\n    width: 100%;\n    border: 1px solid #667eeab5;\n    align-self: flex-start;\n\n    img {\n      display: block;\n      width: 100%;\n      box-shadow: 0 9px 18px rgba(0, 0, 0, 0.5);\n    }\n  }\n\n  .text-desc {\n    width: 100%;\n    display: flex;\n    justify-content: flex-start;\n    flex-direction: column;\n    color: gray;\n\n    .upper-plank {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 2rem;\n\n      .rating {\n        width: 25rem;\n        font-size: 1.5rem;\n        font-weight: 600;\n        border-top: 1px solid gray;\n      }\n    }\n\n    .sub-info {\n      display: flex;\n      justify-content: space-between;\n    }\n\n    /* button {\n      margin: 0;\n    } */\n\n    .summary {\n      text-align: justify;\n      margin: 3rem 0;\n    }\n\n    .schedule,\n    .show-name,\n    .network-name {\n      color: #fff;\n      font-size: 1.1rem;\n      letter-spacing: 0.1rem;\n    }\n\n    .show-name {\n      margin-bottom: 1rem;\n    }\n\n    .schedule {\n      margin: 2rem 0;\n      display: flex;\n      flex-wrap: wrap;\n      justify-content: space-between;\n      line-height: 2rem;\n    }\n\n    .network-name {\n      /* margin-bottom: 2rem; */\n      margin: 2rem 0;\n    }\n\n    .links-btns {\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 2rem;\n      margin-top: 1.5rem;\n\n      a {\n        text-decoration: none;\n        color: #fff;\n        margin: 1rem;\n\n        button {\n          margin: 0;\n          width: 13rem;\n        }\n      }\n    }\n  }\n\n  @media screen and (min-width: 900px) {\n    flex-direction: row;\n\n    .img-desc {\n      width: 25rem;\n    }\n\n    .text-desc {\n      width: 40rem;\n      margin-left: 5rem;\n\n      .links-btns {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        margin-bottom: 2rem;\n        margin-top: 0;\n\n        a {\n          margin: 0;\n\n          button {\n            margin: 0;\n            width: 9rem;\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ShowDescription = () => {\n  const context = useContext(ShowsContext);\n  const show = context.clickedShow;\n  // const [showDescription, setShowDescription] = useState(context.clickedShow);\n\n  // let showDescription = JSON.parse(window.localStorage.getItem(\"savedShow\"));\n\n  let ratingColor =\n    show.show.rating?.average < 3\n      ? \"red\"\n      : show.show.rating?.average < 5\n      ? \"orange\"\n      : show.show.rating?.average < 8\n      ? \"yellow\"\n      : \"green\";\n\n  return (\n    <StyledDescription>\n      <div className=\"img-desc\">\n        <img src={show.show.image?.original} alt=\"\" />\n      </div>\n      <div className=\"text-desc\">\n        <div className=\"links-btns\">\n          {show.show.officialSite && (\n            <a href={show.show.officialSite}>\n              <Button>To Website</Button>\n            </a>\n          )}\n\n          <Link to=\"/description/show\">\n            <Button>About Show</Button>\n          </Link>\n\n          <Link to=\"/description/cast\">\n            <Button>Cast</Button>\n          </Link>\n\n          <Link to=\"/\" className=\"back-btn\">\n            <Button>Back</Button>\n          </Link>\n        </div>\n\n        <div className=\"upper-plank\">\n          <div className=\"rating\" style={{ color: ratingColor }}>\n            {show.show.rating?.average}\n          </div>\n        </div>\n        <div className=\"show-name\">\n          <span>\"{show.name}\"</span>\n        </div>\n        <div className=\"show-numbers\">\n          <span>Season: {show.season} </span>\n          <span>Ep: {show.number}</span>\n        </div>\n\n        {show.summary && (\n          <div\n            className=\"summary\"\n            dangerouslySetInnerHTML={{ __html: show.summary }}\n          />\n        )}\n\n        <div className=\"network-name\">\n          <span>{show.show.schedule?.time}</span> {show.show.network && \"on\"}{\" \"}\n          {show.show.network?.name}\n        </div>\n        {/* <div className=\"links-btns\">\n          {show.show.officialSite && (\n            <Button>\n              <a href={show.show.officialSite}>To Website</a>\n            </Button>\n          )}\n          <Button>\n            <Link to=\"/description/show\">About Show</Link>\n          </Button>\n\n          <Link to=\"/description/cast\">\n            <Button>Cast</Button>\n          </Link>\n        </div> */}\n      </div>\n    </StyledDescription>\n  );\n};\n\nexport default ShowDescription;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"./Button\";\nimport styled from \"styled-components\";\nimport { useContext } from \"react\";\nimport ShowsContext from \"./ShowsContext\";\n\nconst StyledDescription = styled.div`\n  padding: 5rem 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: space-between;\n  overflow: hidden;\n\n  .img-desc {\n    width: 100%;\n    border: 1px solid #667eeab5;\n    align-self: flex-start;\n\n    img {\n      display: block;\n      width: 100%;\n      box-shadow: 0 9px 18px rgba(0, 0, 0, 0.5);\n    }\n  }\n\n  .text-desc {\n    width: 100%;\n    display: flex;\n    justify-content: flex-start;\n    flex-direction: column;\n    color: gray;\n\n    .upper-plank {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 2rem;\n\n      .rating {\n        width: 25rem;\n        font-size: 1.5rem;\n        font-weight: 600;\n        border-top: 1px solid gray;\n      }\n    }\n\n    .sub-info {\n      display: flex;\n      justify-content: space-between;\n    }\n\n    Button {\n      margin: 0;\n    }\n\n    .summary {\n      text-align: justify;\n      margin: 3rem 0;\n    }\n\n    .schedule,\n    .show-name,\n    .network-name {\n      color: #fff;\n      font-size: 1.1rem;\n      letter-spacing: 0.1rem;\n    }\n\n    .schedule {\n      margin: 2rem 0;\n      display: flex;\n      flex-wrap: wrap;\n      justify-content: space-between;\n      line-height: 2rem;\n    }\n\n    .network-name {\n      /* margin-bottom: 2rem; */\n      margin: 2rem 0;\n    }\n\n    .links-btns {\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 2rem;\n      margin-top: 1.5rem;\n\n      a {\n        text-decoration: none;\n        color: #fff;\n        margin: 1rem;\n\n        button {\n          margin: 0;\n          width: 13rem;\n        }\n      }\n    }\n  }\n\n  @media screen and (min-width: 900px) {\n    flex-direction: row;\n\n    .img-desc {\n      width: 25rem;\n    }\n\n    .text-desc {\n      width: 40rem;\n      margin-left: 5rem;\n\n      .links-btns {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        margin-bottom: 2rem;\n        margin-top: 0;\n\n        a {\n          margin: 0;\n\n          button {\n            margin: 0;\n            width: 9rem;\n          }\n        }\n      }\n    }\n  }\n`;\nconst ShowMainDescription = () => {\n  const context = useContext(ShowsContext);\n  const show = context.clickedShow;\n\n  // const showDescription = JSON.parse(window.localStorage.getItem(\"savedShow\"));\n\n  let ratingColor =\n    show.show.rating?.average < 3\n      ? \"red\"\n      : show.show.rating?.average < 5\n      ? \"orange\"\n      : show.show.rating?.average < 8\n      ? \"yellow\"\n      : \"green\";\n\n  return (\n    <StyledDescription>\n      <div className=\"img-desc\">\n        <img src={show.show.image?.original} alt=\"\" />\n      </div>\n\n      <div className=\"text-desc\">\n        <div className=\"links-btns\">\n          {show.show.officialSite && (\n            <a href={show.show.officialSite}>\n              <Button>To Website</Button>\n            </a>\n          )}\n\n          <Link to=\"/description/cast\">\n            <Button>Cast</Button>\n          </Link>\n\n          <Link to=\"/description\" className=\"back-btn\">\n            <Button>Back</Button>\n          </Link>\n        </div>\n\n        <div className=\"upper-plank\">\n          <div className=\"rating\" style={{ color: ratingColor }}>\n            {show.show.rating?.average}\n          </div>\n          {/* <Link to=\"/description\" className=\"back-btn\">\n            <Button>Back</Button>\n          </Link> */}\n        </div>\n        <div className=\"show-name\">{show.show.name}</div>\n        <div className=\"sub-info\">\n          <span>{show.show.type}</span>\n          <span>Premiered: {show.show.premiered}</span>\n        </div>\n        <div\n          className=\"summary\"\n          dangerouslySetInnerHTML={{ __html: show.show.summary }}\n        />\n        <div className=\"schedule\">\n          <span>{show.show.schedule?.days.join(\", \")}</span>{\" \"}\n          <span className=\"time\">{show.show.schedule?.time}</span>\n        </div>\n        <div className=\"network-name\">\n          {show.show.network && \"On\"} {show.show.network?.name}\n        </div>\n        {/* <div className=\"links-btns\">\n          {show.show.officialSite && (\n            <Button>\n              <a href={show.show.officialSite}>To Website</a>\n            </Button>\n          )}\n\n          <Link to=\"/description/cast\">\n            <Button>Cast</Button>\n          </Link>\n        </div> */}\n      </div>\n    </StyledDescription>\n  );\n};\n\nexport default ShowMainDescription;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Spinner = styled.div`\n  margin-top: 5rem;\n  display: flex;\n  justify-content: center;\n\n  .lds-ring {\n    display: inline-block;\n    position: relative;\n    width: 80px;\n    height: 80px;\n\n    div {\n      box-sizing: border-box;\n      display: block;\n      position: absolute;\n      width: 64px;\n      height: 64px;\n      margin: 8px;\n      border: 8px solid #fff;\n      border-radius: 50%;\n      animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n      border-color: #667eea transparent transparent transparent;\n\n      &:nth-child(1) {\n        animation-delay: -0.45s;\n      }\n      &:nth-child(2) {\n        animation-delay: -0.3s;\n      }\n      &:nth-child(3) {\n        animation-delay: -0.15s;\n      }\n    }\n\n    @keyframes lds-ring {\n      0% {\n        transform: rotate(0deg);\n      }\n      100% {\n        transform: rotate(360deg);\n      }\n    }\n  }\n\n  @media screen and (min-width: 900px) {\n    margin-top: 8rem;\n  }\n`;\n\nconst Loader = () => {\n  return (\n    <Spinner>\n      <div className=\"lds-ring\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </Spinner>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useContext } from \"react\";\nimport ShowsContext from \"./ShowsContext\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"./Button\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"./Loader\";\n\nconst StyledCast = styled.div`\n  .top-bar {\n    margin: auto;\n    max-width: 75rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    padding: 3.5rem 0 0;\n\n    .show-name {\n      margin: 0 1.5rem 0.5rem;\n      color: gray;\n      font-size: 1.5rem;\n    }\n\n    .back-btn {\n      button {\n        width: 13rem;\n      }\n    }\n  }\n\n  .replacer {\n    margin-top: 5rem;\n    width: 100%;\n    text-align: center;\n\n    .replacer-text {\n      color: #667eea;\n      font-size: 2rem;\n    }\n  }\n\n  @media screen and (min-width: 900px) {\n    .top-bar {\n      flex-direction: row;\n      padding: 1.5rem 0;\n\n      .show-name {\n        margin: 0 1.5rem;\n        color: gray;\n        font-size: 2rem;\n      }\n\n      .back-btn {\n        button {\n          width: 9rem;\n        }\n      }\n    }\n  }\n`;\n\nconst CastGrid = styled.div`\n  width: 100%;\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-evenly;\n\n  .cast-box {\n    margin: 1rem;\n    padding: 1rem;\n    height: 12rem;\n    width: 22rem;\n    display: flex;\n    color: #fff;\n    border-radius: 8px;\n    box-shadow: 0 9px 18px rgba(0, 0, 0, 0.5);\n\n    .cast-img-box {\n      /* min-width: 7rem; */\n      margin-right: 2rem;\n      background-color: #000;\n      border-radius: 8px;\n      border: 1px solid #667eeab5;\n    }\n\n    .cast-img {\n      height: 100%;\n      /* width: 100%; */\n      display: block;\n      border-radius: 8px;\n    }\n\n    .replacer {\n      height: 100%;\n      width: 7.1rem;\n      background-color: #000;\n      border-radius: 8px;\n    }\n\n    .wrapper {\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n\n      .name-box {\n        display: flex;\n        flex-direction: column;\n        align-items: flex-start;\n        font-size: 0.8rem;\n\n        .name {\n          font-size: 1rem;\n          font-weight: 600;\n          margin-bottom: 1rem;\n        }\n      }\n\n      Button {\n        margin: 0;\n      }\n    }\n  }\n`;\n\nconst ShowCast = () => {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  let history = useHistory();\n  const context = useContext(ShowsContext);\n\n  // const showName = JSON.parse(window.localStorage.getItem(\"savedShow\")).show\n  //   .name;\n\n  const showName = context.clickedShow.show.name;\n  // context.clickedShow.show.name ||\n\n  // const showId = context.clickedShow.show.id;\n  const showId = JSON.parse(window.localStorage.getItem(\"savedShow\")).show.id;\n\n  useEffect(() => {\n    const castDataFetcher = async () => {\n      try {\n        setIsLoading(true);\n        const response = await fetch(\n          `https://api.tvmaze.com/shows/${showId}/cast`\n        );\n        const data = await response.json();\n\n        setCast(data);\n        setIsLoading(false);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    castDataFetcher();\n  }, [showId]);\n\n  return (\n    <StyledCast>\n      <div className=\"top-bar\">\n        <h1 className=\"show-name\">{showName}</h1>\n\n        <span className=\"back-btn\">\n          <Button onClick={history.goBack}>Back</Button>\n        </span>\n      </div>\n\n      {isLoading ? (\n        <Loader />\n      ) : !cast.length && !isLoading ? (\n        <div className=\"replacer\">\n          <span className=\"replacer-text\">Nothing Found</span>\n        </div>\n      ) : (\n        <CastGrid>\n          {cast.map((item, index) => (\n            <div key={index} className=\"cast-box\">\n              <div className=\"cast-img-box\">\n                {item.person.image ? (\n                  <img\n                    src={item.person.image.medium}\n                    className=\"cast-img\"\n                    alt=\"\"\n                  />\n                ) : (\n                  <div className=\"replacer\" />\n                )}\n              </div>\n              <p className=\"wrapper\">\n                <span className=\"name-box\">\n                  <span className=\"name\">{item.person.name}</span>{\" \"}\n                  {item.character.name && `as ${item.character.name}`}\n                </span>\n\n                <Link\n                  to=\"/actor\"\n                  onClick={() => {\n                    context.handleActor(item.person.id);\n                  }}\n                >\n                  <Button>About</Button>\n                </Link>\n              </p>\n            </div>\n          ))}\n        </CastGrid>\n      )}\n    </StyledCast>\n  );\n};\n\nexport default ShowCast;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport ShowsContext from \"./ShowsContext\";\nimport Button from \"./Button\";\n\nconst StyedActor = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  .back-btn {\n    margin-left: auto;\n    align-self: flex-start;\n    Button {\n      margin: 0;\n    }\n  }\n  .actor-box {\n    margin: auto;\n    padding-top: 3rem;\n    display: flex;\n\n    .actor-info {\n      width: 20rem;\n      margin: 0 3rem;\n      display: flex;\n      flex-direction: column;\n      color: #fff;\n      border-top: 1px solid gray;\n      border-bottom: 1px solid gray;\n\n      .actor-name {\n        font-size: 1.1rem;\n        letter-spacing: 0.1rem;\n        padding: 1rem 0;\n      }\n\n      .actor-desc {\n        margin-bottom: 0.5rem;\n      }\n    }\n\n    .actor-img-box {\n      width: 18rem;\n      border: 1px solid #667eeab5;\n      background-color: #000;\n      box-shadow: 0 9px 18px rgba(0, 0, 0, 0.5);\n      align-self: flex-start;\n\n      .actor-img {\n        width: 100%;\n        display: block;\n      }\n\n      .replacer {\n        width: 100%;\n        height: 20rem;\n        background-image: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n      }\n    }\n  }\n`;\n\nconst Actor = () => {\n  const context = useContext(ShowsContext);\n  const history = useHistory();\n  const [actor, setActor] = useState(context.clickedActor);\n\n  useEffect(() => {\n    const actorDataFetcher = async () => {\n      try {\n        const response = await fetch(`https://api.tvmaze.com/people/${actor}`);\n        const data = await response.json();\n        setActor(data);\n        window.localStorage.setItem(\"savedActor\", JSON.stringify(data));\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    actorDataFetcher();\n  }, [actor]);\n\n  return (\n    <StyedActor>\n      <div className=\"actor-box\">\n        <div className=\"actor-img-box\">\n          {actor.image ? (\n            <img src={actor.image.original} alt=\"\" className=\"actor-img\" />\n          ) : (\n            <div className=\"replacer\" />\n          )}\n        </div>\n        <div className=\"actor-info\">\n          <p className=\"actor-name\">{actor.name}</p>\n          <p className=\"actor-desc\">{actor.country?.name}</p>\n          <p className=\"actor-desc\">{actor.gender}</p>\n          <p className=\"actor-desc\">{actor.birthday}</p>\n        </div>\n        <span className=\"back-btn\" onClick={history.goBack}>\n          <Button>Back</Button>\n        </span>\n      </div>\n    </StyedActor>\n  );\n};\n\nexport default Actor;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport SelectBtn from \"./SelectBtn\";\nimport ShowDescription from \"./ShowDescription\";\nimport ShowMainDescription from \"./ShowMainDescription\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport ShowsContext from \"./ShowsContext\";\nimport ShowCast from \"./ShowCast\";\nimport Actor from \"./Actor\";\nimport Button from \"./Button\";\nimport Loader from \"./Loader\";\n\nconst StyledForm = styled.form`\n  margin: auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n\n  button {\n    margin: 2.5rem;\n    width: 13rem;\n  }\n\n  input {\n    margin-top: 2.5rem;\n    width: 18rem;\n    padding-left: 0.8rem;\n    outline: none;\n    height: 1.8rem;\n    border-radius: 10px;\n    /* border: 1px solid rgba(255, 255, 255, 0.3); */\n    border: 1px solid #667eeab5;\n    background-color: transparent;\n    color: #fff;\n    font-size: 1.1rem;\n    transition: all 0.2s ease-in-out;\n    &:hover {\n      background-color: rgba(255, 255, 255, 0.1);\n    }\n  }\n\n  @media screen and (min-width: 900px) {\n    margin: 1.5rem;\n    margin-left: auto;\n    flex-direction: row;\n\n    button {\n      margin: 0 0 0 2rem;\n      width: 9rem;\n    }\n\n    input {\n      margin-top: 0;\n      width: 20rem;\n    }\n  }\n`;\n\nconst StyledMain = styled.main`\n  background-image: linear-gradient(to right bottom, #434343 0%, black 100%);\n  width: 100%;\n  min-height: 100vh;\n  padding: 0 3rem 3rem 3rem;\n\n  .replacer {\n    margin-top: 5rem;\n    width: 100%;\n    text-align: center;\n\n    .replacer-text {\n      color: #667eea;\n      font-size: 2rem;\n    }\n  }\n\n  @media screen and (min-width: 900px) {\n    .replacer {\n      margin-top: 8rem;\n    }\n  }\n`;\n\nconst MoviesNav = styled.div`\n  margin: 0 auto 2rem;\n  display: flex;\n  flex-flow: column-reverse wrap;\n  align-items: center;\n\n  @media screen and (min-width: 900px) {\n    max-width: 75rem;\n    margin: 2rem auto;\n    display: flex;\n    flex-flow: row wrap;\n  }\n`;\n\nconst MoviesGrid = styled.div`\n  overflow: hidden;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 210px);\n  justify-content: center;\n  gap: 2rem;\n  overflow: visible;\n\n  .link {\n    text-decoration: none;\n    display: flex;\n    flex-direction: column;\n    /* justify-content: center; */\n    justify-content: flex-start;\n    align-items: center;\n    cursor: pointer;\n    transition: all 0.3s ease-in-out;\n    &:hover {\n      transform: scale(108%);\n    }\n    p {\n      margin-top: 0.4rem;\n      font-size: 0.8rem;\n      color: #fff;\n\n      .accentend-info {\n        font-size: 1rem;\n        font-weight: 600;\n      }\n    }\n  }\n\n  img {\n    display: block;\n    border-radius: 8px;\n    background-color: #000;\n  }\n`;\n\nconst Movies = ({\n  isLoading,\n  type,\n  genre,\n  search,\n  handleSearch,\n  handleSubmit,\n  showMovies,\n  handleFilter,\n  handleCountry,\n}) => {\n  const context = useContext(ShowsContext);\n\n  return (\n    <StyledMain>\n      <Switch>\n        <Route path=\"/\" exact>\n          <MoviesNav>\n            <SelectBtn\n              value={type}\n              name=\"type\"\n              placeholder=\"Type\"\n              onChange={handleFilter}\n            >\n              <option value=\"All\">All</option>\n              <option value=\"Talk Show\">Talk Show</option>\n              <option value=\"Game Show\">Game Show</option>\n              <option value=\"Scripted\">Scripted</option>\n              <option value=\"Documentary\">Documentary</option>\n              <option value=\"Reality\">Reality</option>\n              <option value=\"News\">News</option>\n              <option value=\"Sports\">Sports</option>\n            </SelectBtn>\n\n            <SelectBtn\n              value={genre}\n              name=\"genre\"\n              placeholder=\"Genre\"\n              onChange={handleFilter}\n            >\n              <option value=\"All\">All</option>\n              <option value=\"Drama\">Drama</option>\n              <option value=\"Comedy\">Comedy</option>\n              <option value=\"Family\">Family</option>\n              <option value=\"Romance\">Romance</option>\n              <option value=\"Sports\">Sports</option>\n              <option value=\"Music\">Music</option>\n              <option value=\"Action\">Action</option>\n              <option value=\"Adventure\">Adventure</option>\n            </SelectBtn>\n\n            <SelectBtn placeholder=\"Country\" onChange={handleCountry}>\n              <option value=\"US\">US</option>\n              <option value=\"GB\">UK</option>\n              <option value=\"RU\">Russia</option>\n              <option value=\"JP\">Japan</option>\n              <option value=\"KR\">South Korea</option>\n            </SelectBtn>\n\n            <StyledForm onSubmit={handleSubmit}>\n              <input type=\"text\" value={search} onChange={handleSearch} />\n              <Button type=\"submit\">Search</Button>\n            </StyledForm>\n          </MoviesNav>\n\n          {isLoading ? (\n            <Loader />\n          ) : !showMovies.length && !isLoading ? (\n            <div className=\"replacer\">\n              <span className=\"replacer-text\">Nothing Found</span>\n            </div>\n          ) : (\n            <MoviesGrid>\n              {showMovies.map(\n                (item) =>\n                  item.show.image && (\n                    <Link\n                      to=\"/description\"\n                      onClick={() => {\n                        context.handleShowSave(item);\n                      }}\n                      className=\"link\"\n                      key={item.id || item.show.id}\n                    >\n                      <img src={item.show.image.medium} alt=\"\" />\n                      <p>\n                        {(item.airdate && \"Today\") ||\n                          item.show.schedule.days.join(\", \")}{\" \"}\n                        <span className=\"accentend-info\">\n                          {item.airtime || item.show.schedule.time}\n                        </span>{\" \"}\n                        {item.show.network && \"on\"}{\" \"}\n                        <span className=\"accentend-info\">\n                          {item.show.network?.name}\n                        </span>\n                      </p>\n                    </Link>\n                  )\n              )}\n            </MoviesGrid>\n          )}\n        </Route>\n        <Route path=\"/description\" exact>\n          <ShowDescription />\n        </Route>\n        <Route path=\"/description/show\" exact>\n          <ShowMainDescription />\n        </Route>\n        <Route path=\"/description/cast\" exact>\n          <ShowCast />\n        </Route>\n        <Route path=\"/actor\">\n          <Actor />\n        </Route>\n      </Switch>\n    </StyledMain>\n  );\n};\n\nexport default Movies;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledFooter = styled.footer`\n  height: 8rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: rgba(255, 255, 255, 0.3);\n  background-image: linear-gradient(to right bottom, #434343 0%, black 100%);\n`;\n\nconst Footer = () => {\n  return (\n    <StyledFooter>\n      <p>Copyright &copy; {new Date().getFullYear()}</p>\n    </StyledFooter>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport ScrollTop from \"react-scrolltop-button\";\nimport styled from \"styled-components\";\nimport { FaArrowCircleUp } from \"react-icons/fa\";\n\nconst StyledScrollTop = styled(ScrollTop)`\n  background-color: red;\n  border-radius: 50%;\n  width: 5rem;\n  height: 5rem;\n  border: 1px solid #000;\n  background-image: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: #000;\n  font-size: 1.3rem;\n  font-weight: 600;\n\n  .icon {\n    font-size: 3.5rem;\n  }\n`;\n\nconst ScrollToTop = () => {\n  return (\n    <StyledScrollTop\n      text=\"UP\"\n      distance={1100}\n      breakpoint={768}\n      speed={500}\n      target={0}\n      icon={<FaArrowCircleUp className=\"icon\" />}\n    />\n  );\n};\n\nexport default ScrollToTop;\n","import { useEffect, useState } from \"react\";\nimport Navigation from \"./Navigation\";\nimport Header from \"./Header\";\nimport Movies from \"./Movies\";\nimport Footer from \"./Footer\";\nimport ScrollToTop from \"./ScrollToTop\";\n\nconst App = () => {\n  const [movies, setMovies] = useState([]);\n  const [showMovies, setShowMovies] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [country, setCountry] = useState(\"US\");\n  const [filterType, setFilterType] = useState(\"\");\n  const [filterGenre, setFilterGenre] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n\n  function addDays(days) {\n    let result = new Date();\n    if (!days) return result.toISOString().slice(0, 10);\n    result.setDate(result.getDate() + days);\n    return result.toISOString().slice(0, 10);\n  }\n\n  const dates = {\n    today: addDays(0),\n    tomorrow: addDays(1),\n  };\n\n  const [filterDate, setFilterDate] = useState(dates.today);\n\n  const filterDateHandler = () => {\n    let date = filterDate === dates.today ? dates.tomorrow : dates.today;\n    setFilterDate(date);\n    setIsLoading(true);\n  };\n\n  const resetHandler = () => {\n    setCountry(\"US\");\n    setQuery(\"\");\n    setFilterType(\"\");\n    setFilterGenre(\"\");\n    setFilterDate(dates.today);\n  };\n\n  useEffect(() => {\n    const initialDataFetcher = async () => {\n      try {\n        setIsLoading(true);\n        const response = await fetch(\n          `https://api.tvmaze.com/schedule?country=${country}&date=${filterDate}`\n        );\n        const data = await response.json();\n\n        setTimeout(() => {\n          setMovies(data);\n          setIsLoading(false);\n        }, 2000);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    initialDataFetcher();\n  }, [country, filterDate]);\n\n  const searchHandler = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch(\"\");\n  };\n\n  const countryHandler = (e) => {\n    setCountry(e.target.value);\n    setIsLoading(true);\n  };\n\n  useEffect(() => {\n    const result = movies\n      .filter((item) =>\n        filterType ? filterType.includes(item.show.type) : item\n      )\n      .filter((item) =>\n        filterGenre ? item.show.genres.includes(filterGenre) : item\n      )\n      .filter((item) =>\n        query\n          ? item.show.name?.toLowerCase().includes(query.toLowerCase()) ||\n            item.show.network?.name\n              .toLowerCase()\n              .includes(query.toLowerCase()) ||\n            item.name?.toLowerCase().includes(query.toLowerCase())\n          : item\n      );\n\n    setShowMovies(result);\n  }, [filterType, filterGenre, movies, query]);\n\n  const filterHandler = (e) => {\n    e.target.name === \"type\" && setFilterType(e.target.value);\n    e.target.name === \"genre\" && setFilterGenre(e.target.value);\n\n    if (e.target.value === \"All\") {\n      e.target.name === \"type\" && setFilterType(\"\");\n      e.target.name === \"genre\" && setFilterGenre(\"\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Navigation\n        handleReset={resetHandler}\n        dates={dates}\n        filterDate={filterDate}\n        filterDateHandler={filterDateHandler}\n      />\n      <Header />\n      <Movies\n        isLoading={isLoading}\n        type={filterType}\n        genre={filterGenre}\n        search={search}\n        handleSearch={searchHandler}\n        handleSubmit={submitHandler}\n        showMovies={showMovies}\n        handleFilter={filterHandler}\n        handleCountry={countryHandler}\n      />\n      <ScrollToTop />\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nconst ScrollToView = () => {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    pathname !== \"/\" && window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n};\n\nexport default ScrollToView;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { ShowsContextProvider } from \"./ShowsContext\";\nimport ScrollToView from \"./ScrollToView\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ShowsContextProvider>\n      <Router>\n        <ScrollToView />\n        <App />\n      </Router>\n    </ShowsContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}